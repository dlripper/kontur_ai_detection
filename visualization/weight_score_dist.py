import subprocess
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import re
from PIL import Image

from data.recover import get_recovered

def get_maniqa_weights_scores_visualisation() -> None:
    """
    Visualize the original images along with their corresponding weight and score heatmaps.

    This function does the following steps:
    1. Copies a Python script from a specified location into another location.
    2. Runs the copied Python script, which generates heatmap data for weights and scores.
    3. Loads images from specified file paths and retrieves corresponding heatmap data for visualization.
    4. Merges original data with additional data from other CSV files to facilitate merging and analysis.
    5. Plots the original image, weight heatmap, and score heatmap side by side for visualization.

    This function is designed to help analyze the results of a quality assessment on images and visualize
    heatmaps for weights and scores. The heatmaps are loaded from .npy files, generated by the copied Python script.

    Parameters:
    - None

    Returns:
    - None: The function displays plots but does not return any values.

    Notes:
    - The Python script to be copied and executed must be present in the specified source path.
    - The data used for visualizations must be available in the correct locations to ensure successful execution.
    - Ensure that the necessary CSV files and .npy files are in the expected locations.
    """
    subprocess.run(["cp", "utils/predict_weight_score_dist.py", "utils/MANIQA/"]) 
    subprocess.run(["python", "utils/MANIQA/predict_weight_score_dist.py"])

    images_paths = images_paths = ["data/imagenet_ai_0419_biggan/train/nature/n01491361_7778.jpeg", 
    "data/generated-or-not/images/Bz9RPbGAPC.jpeg", "data/generated-or-not/images/CJJ5WO9GJi.png", 
    "data/generated-or-not/images/zkQZTIwPu7.jpg"]
    df = get_recovered("train.csv")
    maniqa = pd.read_csv("data/maniqa.csv")
    merged_df = pd.merge(df,maniqa, on='id', how='left')
    maniqa_genimage = pd.read_csv("data/maniqa_imagenet.csv")

    for image_path in images_paths:
        img = np.array(Image.open(image_path).convert("RGB"))

        w_normalized = np.load(f"visualization/{re.split(r'[/.]', image_path)[-2]}_w_heatmap.npy")
        s_normalized = np.load(f"visualization/{re.split(r'[/.]', image_path)[-2]}_s_heatmap.npy")

        fig, axs = plt.subplots(1, 3, figsize=(15, 5))

        axs[0].imshow(img)
        axs[0].set_title(f'Orig Image, gt {int(np.array(df.target)[df.id == image_path.split("/")[-1]]) if image_path.split("/")[-1] in list(df.id) else 0}')
        axs[0].axis('off')

        axs[1].imshow(w_normalized, cmap='jet', interpolation='nearest')
        axs[1].set_title('Weight Heatmap')
        axs[1].axis('off')

        axs[2].imshow(s_normalized, cmap='jet', interpolation='nearest')
        axs[2].set_title('Score Heatmap')
        axs[2].axis('off')

        plt.show()
